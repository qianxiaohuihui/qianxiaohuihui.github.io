		<dependency>
            <groupId>javax.mail</groupId>
            <artifactId>javax.mail-api</artifactId>
            <version>1.5.6</version>
        </dependency>
        <dependency>
            <groupId>com.sun.mail</groupId>
            <artifactId>javax.mail</artifactId>
            <version>1.5.6</version>
        </dependency>


import javax.mail.Message;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import java.util.Properties;

/**
 * Created by Administrator on 2017/9/4.
 */
public class sendEmail {

    /**
     *
     * @param checknum 邮件内容
     * @param titel 邮件标题
     * @param email 收件邮箱地址
     */
    public static void sendTxtMail(String checknum,String titel, String email) {
        Properties props = new Properties();
        props.put("mail.smtp.host", "smtp.163.com"); //smtp服务器地址

        props.put("mail.smtp.auth", true);  //是否需要认证

        /**实例化一个验证里，继承abstract Authenticator
         * 实现
         *   protected PasswordAuthentication getPasswordAuthentication(){
         *       return new PasswordAuthentication(userName,password);
         *   }
         */
        MyAuthenticator myauth = new MyAuthenticator("ylqx_jgxt@163.com", "hyjk2017");//这的密码是开启smtp服务后的授权码
        //获得一个带有authenticator的session实例
        Session session = Session.getInstance(props, myauth);
        session.setDebug(true);//打开debug模式，会打印发送细节到console
        Message message = new MimeMessage(session); //实例化一个MimeMessage集成自abstract Message 。参数为session
        try {
            message.setFrom(new InternetAddress("ylqx_jgxt@163.com")); //设置发出方,使用setXXX设置单用户，使用addXXX添加InternetAddress[]

            message.setText(checknum); //设置文本内容 单一文本使用setText,Multipart复杂对象使用setContent

            message.setSubject(titel); //设置标题

            message.setRecipient(Message.RecipientType.TO, new InternetAddress(email)); //设置接收方

            Transport.send(message); //使用Transport静态方法发送邮件

        } catch (AddressException e) {
            //此处处理AddressException异常  [The exception thrown when a wrongly formatted address is encountered.]

        } catch (javax.mail.MessagingException e) {
            e.printStackTrace();
        }
    }
}
